<!DOCTYPE html>
<html>

<head>
    <title>Dynamic Web TWAIN: Remote Scanner Control</title>
    <script type="text/javascript" src="Resources/dynamsoft.webtwain.initiate.js"></script>
    <script type="text/javascript" src="Resources/dynamsoft.webtwain.config.js"></script>
</head>

<body>
    <select size="1" id="remote" style="position: relative; width: 220px;">
        <option>192.168.8.84</option>
        <option>192.168.8.85</option>
    </select>
    <select size="1" id="source" style="position: relative; width: 220px;"></select>
    <input type="button" value="Scan" onclick="acquireImage();" />
    <div id="dwtcontrolContainer"></div>

    <script type="text/javascript">
        Dynamsoft.WebTwainEnv.UseLocalService = false; 
        Dynamsoft.WebTwainEnv.AutoLoad = true;
        // Get a free trial license key from https://www.dynamsoft.com/CustomerPortal/Portal/Triallicense.aspx
        Dynamsoft.WebTwainEnv.ProductKey = 'LICENSE-KEY';
        var DWObject = null;
		var DWServiceObject = null;
        var selectSource = document.getElementById('source');
        var ip = document.getElementById('remote');

        Dynamsoft.WebTwainEnv.RegisterEvent('OnWebTwainReady', Dynamsoft_OnReady); // Register OnWebTwainReady event. This event fires as soon as Dynamic Web TWAIN is initialized and ready to be used

        function Dynamsoft_OnReady() {
            DWObject = Dynamsoft.WebTwainEnv.GetWebTwain('dwtcontrolContainer'); // Get the Dynamic Web TWAIN object that is embeded in the div with id 'dwtcontrolContainer'
			if(DWObject) {
				DWObject.MouseShape = true;
				createScanObject(ip.value);
			}
        }

        function createScanObject(ip) {
			var dwtConfig={WebTwainId:ip, Host: ip, UseLocalService:'true'}; 
			Dynamsoft.WebTwainEnv.CreateDWTObjectEx(dwtConfig, function (dwt) {
                DWServiceObject = dwt; 
                DWServiceObject.RegisterEvent('OnPostTransferAsync', function(outputInfo){
                        DWServiceObject.ConvertToBlob(
                            [DWServiceObject.ImageIDToIndex(outputInfo.imageId)], 
                            Dynamsoft.EnumDWT_ImageType.IT_PNG, 
                            function (result, indices, type) {
                                DWObject.LoadImageFromBinary(
                                    result,         
                                    function () {
                                        console.log('LoadImageFromBinary success');
                                        DWServiceObject.RemoveImage(DWServiceObject.ImageIDToIndex(outputInfo.imageId));
                                    },
                                    function (errorCode, errorString) {
                                        console.log(errorString);
                                    }
                                );
                            },
                            function (errorCode, errorString) {
                                console.log(errorString);
                            }
                        );
                    }
			);
			
			DWServiceObject.GetSourceNamesAsync().then(function(result) {
                    // remove previous options
                    for (var i=0; i< selectSource.length; i++) {
                            selectSource.remove(i);
                    }

					for (var i = 0; i < result.length; i++)
                        selectSource.options.add(new Option(result[i], i));
				},
				function(fail) {
					console.log(fail);
				});
			}, 
			function (error){console.log(error)});
		}
        
        function acquireImage() {
            if (DWServiceObject) {
                var onSuccess, onFailure;
                onSuccess = onFailure = function () {
                    DWServiceObject.CloseSource();
                };
                
                var deviceConfiguration = {
					SelectSourceByIndex: 0,
					IfShowUI: false,
					PixelType:Dynamsoft.EnumDWT_PixelType.TWPT_RGB,
					Resolution: 300,
					IfFeederEnabled: false,
					IfDuplexEnabled: false,
					IfDisableSourceAfterAcquire: true,
                };
                
                DWServiceObject.SelectSourceByIndex(document.getElementById('source').selectedIndex); 
                DWServiceObject.AcquireImage(deviceConfiguration, onSuccess, onFailure);
            }
        }

        
        ip.onchange = function() {
            createScanObject(ip.value);
        }
    </script>
</body>

</html>